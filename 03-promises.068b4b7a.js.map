{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GACnBJ,EAAQ,CAAEH,WAAUC,UAClCG,EAAO,CAAEJ,WAAUC,S,GACvBA,E,IAKMO,SAASC,cAAc,SAoB/BC,iBAAiB,UAlBD,SAAAC,GACnBA,EAAMC,iBAMN,IAJA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGlBC,EAAI,EAAGA,EAAID,EAAOE,MAAOD,IAChCnB,EAAcmB,EAAI,GAAIjB,EAAMkB,MAAQD,EAAIF,EAAKG,OAC1CC,MAAK,SAAAC,G,OACJC,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAA2CC,OAAtBJ,EAAOrB,SAAS,QAAmByB,OAAbJ,EAAOpB,MAAM,M,IAEjFyB,OAAM,SAAAC,G,OACLL,EAAAzB,GAAS0B,OAAOK,QAAQ,oBAAyCH,OAArBE,EAAM3B,SAAS,QAAkByB,OAAZE,EAAM1B,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(i + 1, +delay.value + i * step.value)\n      .then(result =>\n        Notiflix.Notify.success(`Fulfilled promise ${result.position} in ${result.delay}ms`),\n      )\n      .catch(error =>\n        Notiflix.Notify.failure(`Rejected promise ${error.position} in ${error.delay}ms`),\n      );\n  }\n};\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i","value","then","result","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.068b4b7a.js.map"}