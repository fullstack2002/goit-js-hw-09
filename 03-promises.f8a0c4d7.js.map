{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GACnBJ,EAAQ,C,SAAEH,E,MAAUC,IAClCG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC/BA,EAAM,G,CAKAO,SAASC,cAAc,SAoB/BC,iBAAiB,UAlBDC,IACnBA,EAAMC,iBAEN,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,IAChClB,EAAckB,EAAI,GAAIhB,EAAMiB,MAAQD,EAAIH,EAAKI,OAC1CC,MAAKC,GACJC,EAAAxB,GAASyB,OAAOC,QAAQ,qBAAqBH,EAAOpB,eAAeoB,EAAOnB,aAE3EuB,OAAMC,GACLJ,EAAAxB,GAASyB,OAAOI,QAAQ,oBAAoBD,EAAMzB,eAAeyB,EAAMxB,YACxE","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(i + 1, +delay.value + i * step.value)\n      .then(result =>\n        Notiflix.Notify.success(`Fulfilled promise ${result.position} in ${result.delay}ms`),\n      )\n      .catch(error =>\n        Notiflix.Notify.failure(`Rejected promise ${error.position} in ${error.delay}ms`),\n      );\n  }\n};\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","value","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f8a0c4d7.js.map"}